// <auto-generated />
using System;
using Ewart.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ewart.Migrations
{
    [DbContext(typeof(EwartContext))]
    [Migration("20181220194504_initialBuild")]
    partial class initialBuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ewart.Models.Courses.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription");

                    b.Property<string>("Name");

                    b.Property<int>("TeacherId");

                    b.HasKey("CourseId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("Ewart.Models.Courses.IndividualSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("DescriptionFour");

                    b.Property<string>("DescriptionOne");

                    b.Property<string>("DescriptionThree");

                    b.Property<string>("DescriptionTwo");

                    b.Property<double>("LessonDuration");

                    b.Property<string>("Name");

                    b.Property<int>("TeacherId");

                    b.HasKey("SubjectId");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("Ewart.Models.Users.BaseUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("CostPerWeek");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("UserType");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("Ewart.Models.UserSettings", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("LogoUrl");

                    b.Property<string>("LongDescription");

                    b.Property<string>("OrganizationName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ShortDescription");

                    b.HasKey("OrganizationId");

                    b.ToTable("userSettings");
                });

            modelBuilder.Entity("Ewart.Models.Users.Student", b =>
                {
                    b.HasBaseType("Ewart.Models.Users.BaseUser");

                    b.Property<string>("Allergies");

                    b.Property<int>("CourseId");

                    b.Property<string>("EmergencyContact");

                    b.Property<string>("Notes");

                    b.Property<int>("TeacherId");

                    b.ToTable("Student");

                    b.HasDiscriminator().HasValue("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
